name: Dev main yml

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - 'dev'
jobs:
  build-dev:
    environment: dev # github에서 설정한 환경 Secret 파일 사용
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ github.repository }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
              ${{ github.repository }}-gradle-

      # application 파일 생성
      - name: make application.yml
#        if: |
#          contains(github.ref, 'main') ||
#          contains(github.ref, 'develop')
        run: |
          mkdir ./src/main/resources 
          cd ./src/main/resources 
          touch ./application.yml 
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      # 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # 빌드 클린 후 빌드 진행
      - name: Build with Gradle
        run: |
          ./gradlew clean build
          ./gradlew build \
          --no-daemon \
          -Dorg.gradle.jvmargs=-Xmx1024m \
          --build-cache \
          --project-cache-dir=./gradle-cache/project \
          --gradle-user-home=./gradle-cache/global \
          --project-dir="./"

      # 테스트 빌드 진행
#      - name: Test Build with Gradle
#        run: ./gradlew test

      # test 결과 업로드
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results

      # Coverage 동작 확인용
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/reports/jacoco/test/jacocoTestReport.xml

      - name: 테스트 커버리지를 PR에 코멘트로 등록합니다.
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: 📝 테스트 커버리지 리포트입니다
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.git_hub_token }}
          min-coverage-overall: 50
          min-cove`rage-changed-files: 50


  slack_noti:
    name: Slack_notification
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: www-be
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.